Nonterminals useless in grammar

   multi_var


Rules useless in grammar

   58 multi_var: var
   59          | var COMMA multi_var


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | function program

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    4 declaration: identifiers COLON INTEGER
    5            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    6 statement: identifiers ASSIGN exp
    7          | IF bool_exp THEN multi_statement multi_statement_else ENDIF
    8          | WHILE bool_exp BEGINLOOP multi_statement ENDLOOP
    9          | DO BEGINLOOP multi_statement ENDLOOP WHILE bool_exp
   10          | READ identifiers
   11          | WRITE identifiers
   12          | CONTINUE
   13          | RETURN exp

   14 bool_exp: relation_and_exp
   15         | bool_exp OR relation_and_exp

   16 relation_and_exp: relation_exp
   17                 | relation_and_exp AND relation_exp

   18 relation_exp: exp comp exp
   19             | TRUE
   20             | FALSE
   21             | L_PAREN bool_exp R_PAREN
   22             | NOT exp comp exp
   23             | NOT TRUE
   24             | NOT FALSE
   25             | NOT L_PAREN bool_exp R_PAREN

   26 comp: EQ
   27     | NEQ
   28     | LT
   29     | GT
   30     | LTE
   31     | GTE

   32 exp: multiplicative_exp
   33    | exp ADD multiplicative_exp
   34    | exp SUB multiplicative_exp

   35 multiplicative_exp: term
   36                   | multiplicative_exp MULT term
   37                   | multiplicative_exp DIV term
   38                   | multiplicative_exp MOD term

   39 term: var
   40     | NUMBER
   41     | L_PAREN exp R_PAREN
   42     | SUB var
   43     | SUB NUMBER
   44     | SUB L_PAREN exp R_PAREN
   45     | IDENT L_PAREN multi_exp R_PAREN

   46 multi_exp: exp
   47          | exp COMMA multi_exp

   48 multi_declaration: %empty
   49                  | declaration SEMICOLON multi_declaration

   50 multi_statement: statement SEMICOLON
   51                | statement SEMICOLON multi_statement

   52 multi_statement_else: %empty
   53                     | ELSE multi_statement

   54 identifiers: IDENT
   55            | identifiers COMMA IDENT

   56 var: IDENT
   57    | IDENT L_SQUARE_BRACKET exp R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 3
BEGIN_PARAMS (259) 3
END_PARAMS (260) 3
BEGIN_LOCALS (261) 3
END_LOCALS (262) 3
BEGIN_BODY (263) 3
END_BODY (264) 3
INTEGER (265) 4 5
ARRAY (266) 5
OF (267) 5
IF (268) 7
THEN (269) 7
ENDIF (270) 7
ELSE (271) 53
WHILE (272) 8 9
DO (273) 9
BEGINLOOP (274) 8 9
ENDLOOP (275) 8 9
CONTINUE (276) 12
READ (277) 10
WRITE (278) 11
AND (279) 17
OR (280) 15
NOT (281) 22 23 24 25
TRUE (282) 19 23
FALSE (283) 20 24
RETURN (284) 13
SUB (285) 34 42 43 44
ADD (286) 33
MULT (287) 36
DIV (288) 37
MOD (289) 38
EQ (290) 26
NEQ (291) 27
LT (292) 28
GT (293) 29
LTE (294) 30
GTE (295) 31
SEMICOLON (296) 3 49 50 51
COLON (297) 4 5
COMMA (298) 47 55
L_PAREN (299) 21 25 41 44 45
R_PAREN (300) 21 25 41 44 45
L_SQUARE_BRACKET (301) 5 57
R_SQUARE_BRACKET (302) 5 57
ASSIGN (303) 6
IDENT (304) 3 45 54 55 56 57
NUMBER (305) 5 40 43


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 2
function (53)
    on left: 3, on right: 2
declaration (54)
    on left: 4 5, on right: 49
statement (55)
    on left: 6 7 8 9 10 11 12 13, on right: 50 51
bool_exp (56)
    on left: 14 15, on right: 7 8 9 15 21 25
relation_and_exp (57)
    on left: 16 17, on right: 14 15 17
relation_exp (58)
    on left: 18 19 20 21 22 23 24 25, on right: 16 17
comp (59)
    on left: 26 27 28 29 30 31, on right: 18 22
exp (60)
    on left: 32 33 34, on right: 6 13 18 22 33 34 41 44 46 47 57
multiplicative_exp (61)
    on left: 35 36 37 38, on right: 32 33 34 36 37 38
term (62)
    on left: 39 40 41 42 43 44 45, on right: 35 36 37 38
multi_exp (63)
    on left: 46 47, on right: 45 47
multi_declaration (64)
    on left: 48 49, on right: 3 49
multi_statement (65)
    on left: 50 51, on right: 3 7 8 9 51 53
multi_statement_else (66)
    on left: 52 53, on right: 7
identifiers (67)
    on left: 54 55, on right: 4 5 6 10 11 55
var (68)
    on left: 56 57, on right: 39 42


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    2 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 6
    function  go to state 3


State 4

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 program: function program .

    $default  reduce using rule 2 (program)


State 7

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 48 (multi_declaration)

    declaration        go to state 10
    multi_declaration  go to state 11
    identifiers        go to state 12


State 9

   54 identifiers: IDENT .

    $default  reduce using rule 54 (identifiers)


State 10

   49 multi_declaration: declaration . SEMICOLON multi_declaration

    SEMICOLON  shift, and go to state 13


State 11

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration . END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    END_PARAMS  shift, and go to state 14


State 12

    4 declaration: identifiers . COLON INTEGER
    5            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   55 identifiers: identifiers . COMMA IDENT

    COLON  shift, and go to state 15
    COMMA  shift, and go to state 16


State 13

   49 multi_declaration: declaration SEMICOLON . multi_declaration

    IDENT  shift, and go to state 9

    $default  reduce using rule 48 (multi_declaration)

    declaration        go to state 10
    multi_declaration  go to state 17
    identifiers        go to state 12


State 14

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS . BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 15

    4 declaration: identifiers COLON . INTEGER
    5            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 19
    ARRAY    shift, and go to state 20


State 16

   55 identifiers: identifiers COMMA . IDENT

    IDENT  shift, and go to state 21


State 17

   49 multi_declaration: declaration SEMICOLON multi_declaration .

    $default  reduce using rule 49 (multi_declaration)


State 18

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS . multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 48 (multi_declaration)

    declaration        go to state 10
    multi_declaration  go to state 22
    identifiers        go to state 12


State 19

    4 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 4 (declaration)


State 20

    5 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 23


State 21

   55 identifiers: identifiers COMMA IDENT .

    $default  reduce using rule 55 (identifiers)


State 22

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration . END_LOCALS BEGIN_BODY multi_statement END_BODY

    END_LOCALS  shift, and go to state 24


State 23

    5 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 25


State 24

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS . BEGIN_BODY multi_statement END_BODY

    BEGIN_BODY  shift, and go to state 26


State 25

    5 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 27


State 26

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY . multi_statement END_BODY

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34
    IDENT     shift, and go to state 9

    statement        go to state 35
    multi_statement  go to state 36
    identifiers      go to state 37


State 27

    5 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 38


State 28

    7 statement: IF . bool_exp THEN multi_statement multi_statement_else ENDIF

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    bool_exp            go to state 46
    relation_and_exp    go to state 47
    relation_exp        go to state 48
    exp                 go to state 49
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 29

    8 statement: WHILE . bool_exp BEGINLOOP multi_statement ENDLOOP

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    bool_exp            go to state 53
    relation_and_exp    go to state 47
    relation_exp        go to state 48
    exp                 go to state 49
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 30

    9 statement: DO . BEGINLOOP multi_statement ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 54


State 31

   12 statement: CONTINUE .

    $default  reduce using rule 12 (statement)


State 32

   10 statement: READ . identifiers

    IDENT  shift, and go to state 9

    identifiers  go to state 55


State 33

   11 statement: WRITE . identifiers

    IDENT  shift, and go to state 9

    identifiers  go to state 56


State 34

   13 statement: RETURN . exp

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    exp                 go to state 58
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 35

   50 multi_statement: statement . SEMICOLON
   51                | statement . SEMICOLON multi_statement

    SEMICOLON  shift, and go to state 59


State 36

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement . END_BODY

    END_BODY  shift, and go to state 60


State 37

    6 statement: identifiers . ASSIGN exp
   55 identifiers: identifiers . COMMA IDENT

    COMMA   shift, and go to state 16
    ASSIGN  shift, and go to state 61


State 38

    5 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 62


State 39

   22 relation_exp: NOT . exp comp exp
   23             | NOT . TRUE
   24             | NOT . FALSE
   25             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    exp                 go to state 66
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 40

   19 relation_exp: TRUE .

    $default  reduce using rule 19 (relation_exp)


State 41

   20 relation_exp: FALSE .

    $default  reduce using rule 20 (relation_exp)


State 42

   42 term: SUB . var
   43     | SUB . NUMBER
   44     | SUB . L_PAREN exp R_PAREN

    L_PAREN  shift, and go to state 67
    IDENT    shift, and go to state 68
    NUMBER   shift, and go to state 69

    var  go to state 70


State 43

   21 relation_exp: L_PAREN . bool_exp R_PAREN
   41 term: L_PAREN . exp R_PAREN

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    bool_exp            go to state 71
    relation_and_exp    go to state 47
    relation_exp        go to state 48
    exp                 go to state 72
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 44

   45 term: IDENT . L_PAREN multi_exp R_PAREN
   56 var: IDENT .
   57    | IDENT . L_SQUARE_BRACKET exp R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 73
    L_SQUARE_BRACKET  shift, and go to state 74

    $default  reduce using rule 56 (var)


State 45

   40 term: NUMBER .

    $default  reduce using rule 40 (term)


State 46

    7 statement: IF bool_exp . THEN multi_statement multi_statement_else ENDIF
   15 bool_exp: bool_exp . OR relation_and_exp

    THEN  shift, and go to state 75
    OR    shift, and go to state 76


State 47

   14 bool_exp: relation_and_exp .
   17 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 77

    $default  reduce using rule 14 (bool_exp)


State 48

   16 relation_and_exp: relation_exp .

    $default  reduce using rule 16 (relation_and_exp)


State 49

   18 relation_exp: exp . comp exp
   33 exp: exp . ADD multiplicative_exp
   34    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79
    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 86


State 50

   32 exp: multiplicative_exp .
   36 multiplicative_exp: multiplicative_exp . MULT term
   37                   | multiplicative_exp . DIV term
   38                   | multiplicative_exp . MOD term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 32 (exp)


State 51

   35 multiplicative_exp: term .

    $default  reduce using rule 35 (multiplicative_exp)


State 52

   39 term: var .

    $default  reduce using rule 39 (term)


State 53

    8 statement: WHILE bool_exp . BEGINLOOP multi_statement ENDLOOP
   15 bool_exp: bool_exp . OR relation_and_exp

    BEGINLOOP  shift, and go to state 90
    OR         shift, and go to state 76


State 54

    9 statement: DO BEGINLOOP . multi_statement ENDLOOP WHILE bool_exp

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34
    IDENT     shift, and go to state 9

    statement        go to state 35
    multi_statement  go to state 91
    identifiers      go to state 37


State 55

   10 statement: READ identifiers .
   55 identifiers: identifiers . COMMA IDENT

    COMMA  shift, and go to state 16

    $default  reduce using rule 10 (statement)


State 56

   11 statement: WRITE identifiers .
   55 identifiers: identifiers . COMMA IDENT

    COMMA  shift, and go to state 16

    $default  reduce using rule 11 (statement)


State 57

   41 term: L_PAREN . exp R_PAREN

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    exp                 go to state 92
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 58

   13 statement: RETURN exp .
   33 exp: exp . ADD multiplicative_exp
   34    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 13 (statement)


State 59

   50 multi_statement: statement SEMICOLON .
   51                | statement SEMICOLON . multi_statement

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34
    IDENT     shift, and go to state 9

    $default  reduce using rule 50 (multi_statement)

    statement        go to state 35
    multi_statement  go to state 93
    identifiers      go to state 37


State 60

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY .

    $default  reduce using rule 3 (function)


State 61

    6 statement: identifiers ASSIGN . exp

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    exp                 go to state 94
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 62

    5 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 5 (declaration)


State 63

   23 relation_exp: NOT TRUE .

    $default  reduce using rule 23 (relation_exp)


State 64

   24 relation_exp: NOT FALSE .

    $default  reduce using rule 24 (relation_exp)


State 65

   25 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   41 term: L_PAREN . exp R_PAREN

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    bool_exp            go to state 95
    relation_and_exp    go to state 47
    relation_exp        go to state 48
    exp                 go to state 72
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 66

   22 relation_exp: NOT exp . comp exp
   33 exp: exp . ADD multiplicative_exp
   34    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79
    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 96


State 67

   44 term: SUB L_PAREN . exp R_PAREN

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    exp                 go to state 97
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 68

   56 var: IDENT .
   57    | IDENT . L_SQUARE_BRACKET exp R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 74

    $default  reduce using rule 56 (var)


State 69

   43 term: SUB NUMBER .

    $default  reduce using rule 43 (term)


State 70

   42 term: SUB var .

    $default  reduce using rule 42 (term)


State 71

   15 bool_exp: bool_exp . OR relation_and_exp
   21 relation_exp: L_PAREN bool_exp . R_PAREN

    OR       shift, and go to state 76
    R_PAREN  shift, and go to state 98


State 72

   18 relation_exp: exp . comp exp
   33 exp: exp . ADD multiplicative_exp
   34    | exp . SUB multiplicative_exp
   41 term: L_PAREN exp . R_PAREN

    SUB      shift, and go to state 78
    ADD      shift, and go to state 79
    EQ       shift, and go to state 80
    NEQ      shift, and go to state 81
    LT       shift, and go to state 82
    GT       shift, and go to state 83
    LTE      shift, and go to state 84
    GTE      shift, and go to state 85
    R_PAREN  shift, and go to state 99

    comp  go to state 86


State 73

   45 term: IDENT L_PAREN . multi_exp R_PAREN

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    exp                 go to state 100
    multiplicative_exp  go to state 50
    term                go to state 51
    multi_exp           go to state 101
    var                 go to state 52


State 74

   57 var: IDENT L_SQUARE_BRACKET . exp R_SQUARE_BRACKET

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    exp                 go to state 102
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 75

    7 statement: IF bool_exp THEN . multi_statement multi_statement_else ENDIF

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34
    IDENT     shift, and go to state 9

    statement        go to state 35
    multi_statement  go to state 103
    identifiers      go to state 37


State 76

   15 bool_exp: bool_exp OR . relation_and_exp

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    relation_and_exp    go to state 104
    relation_exp        go to state 48
    exp                 go to state 49
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 77

   17 relation_and_exp: relation_and_exp AND . relation_exp

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    relation_exp        go to state 105
    exp                 go to state 49
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 78

   34 exp: exp SUB . multiplicative_exp

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    multiplicative_exp  go to state 106
    term                go to state 51
    var                 go to state 52


State 79

   33 exp: exp ADD . multiplicative_exp

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    multiplicative_exp  go to state 107
    term                go to state 51
    var                 go to state 52


State 80

   26 comp: EQ .

    $default  reduce using rule 26 (comp)


State 81

   27 comp: NEQ .

    $default  reduce using rule 27 (comp)


State 82

   28 comp: LT .

    $default  reduce using rule 28 (comp)


State 83

   29 comp: GT .

    $default  reduce using rule 29 (comp)


State 84

   30 comp: LTE .

    $default  reduce using rule 30 (comp)


State 85

   31 comp: GTE .

    $default  reduce using rule 31 (comp)


State 86

   18 relation_exp: exp comp . exp

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    exp                 go to state 108
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 87

   36 multiplicative_exp: multiplicative_exp MULT . term

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    term  go to state 109
    var   go to state 52


State 88

   37 multiplicative_exp: multiplicative_exp DIV . term

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    term  go to state 110
    var   go to state 52


State 89

   38 multiplicative_exp: multiplicative_exp MOD . term

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    term  go to state 111
    var   go to state 52


State 90

    8 statement: WHILE bool_exp BEGINLOOP . multi_statement ENDLOOP

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34
    IDENT     shift, and go to state 9

    statement        go to state 35
    multi_statement  go to state 112
    identifiers      go to state 37


State 91

    9 statement: DO BEGINLOOP multi_statement . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 113


State 92

   33 exp: exp . ADD multiplicative_exp
   34    | exp . SUB multiplicative_exp
   41 term: L_PAREN exp . R_PAREN

    SUB      shift, and go to state 78
    ADD      shift, and go to state 79
    R_PAREN  shift, and go to state 99


State 93

   51 multi_statement: statement SEMICOLON multi_statement .

    $default  reduce using rule 51 (multi_statement)


State 94

    6 statement: identifiers ASSIGN exp .
   33 exp: exp . ADD multiplicative_exp
   34    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 6 (statement)


State 95

   15 bool_exp: bool_exp . OR relation_and_exp
   25 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    OR       shift, and go to state 76
    R_PAREN  shift, and go to state 114


State 96

   22 relation_exp: NOT exp comp . exp

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    exp                 go to state 115
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 97

   33 exp: exp . ADD multiplicative_exp
   34    | exp . SUB multiplicative_exp
   44 term: SUB L_PAREN exp . R_PAREN

    SUB      shift, and go to state 78
    ADD      shift, and go to state 79
    R_PAREN  shift, and go to state 116


State 98

   21 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 21 (relation_exp)


State 99

   41 term: L_PAREN exp R_PAREN .

    $default  reduce using rule 41 (term)


State 100

   33 exp: exp . ADD multiplicative_exp
   34    | exp . SUB multiplicative_exp
   46 multi_exp: exp .
   47          | exp . COMMA multi_exp

    SUB    shift, and go to state 78
    ADD    shift, and go to state 79
    COMMA  shift, and go to state 117

    $default  reduce using rule 46 (multi_exp)


State 101

   45 term: IDENT L_PAREN multi_exp . R_PAREN

    R_PAREN  shift, and go to state 118


State 102

   33 exp: exp . ADD multiplicative_exp
   34    | exp . SUB multiplicative_exp
   57 var: IDENT L_SQUARE_BRACKET exp . R_SQUARE_BRACKET

    SUB               shift, and go to state 78
    ADD               shift, and go to state 79
    R_SQUARE_BRACKET  shift, and go to state 119


State 103

    7 statement: IF bool_exp THEN multi_statement . multi_statement_else ENDIF

    ELSE  shift, and go to state 120

    $default  reduce using rule 52 (multi_statement_else)

    multi_statement_else  go to state 121


State 104

   15 bool_exp: bool_exp OR relation_and_exp .
   17 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 77

    $default  reduce using rule 15 (bool_exp)


State 105

   17 relation_and_exp: relation_and_exp AND relation_exp .

    $default  reduce using rule 17 (relation_and_exp)


State 106

   34 exp: exp SUB multiplicative_exp .
   36 multiplicative_exp: multiplicative_exp . MULT term
   37                   | multiplicative_exp . DIV term
   38                   | multiplicative_exp . MOD term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 34 (exp)


State 107

   33 exp: exp ADD multiplicative_exp .
   36 multiplicative_exp: multiplicative_exp . MULT term
   37                   | multiplicative_exp . DIV term
   38                   | multiplicative_exp . MOD term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 33 (exp)


State 108

   18 relation_exp: exp comp exp .
   33 exp: exp . ADD multiplicative_exp
   34    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 18 (relation_exp)


State 109

   36 multiplicative_exp: multiplicative_exp MULT term .

    $default  reduce using rule 36 (multiplicative_exp)


State 110

   37 multiplicative_exp: multiplicative_exp DIV term .

    $default  reduce using rule 37 (multiplicative_exp)


State 111

   38 multiplicative_exp: multiplicative_exp MOD term .

    $default  reduce using rule 38 (multiplicative_exp)


State 112

    8 statement: WHILE bool_exp BEGINLOOP multi_statement . ENDLOOP

    ENDLOOP  shift, and go to state 122


State 113

    9 statement: DO BEGINLOOP multi_statement ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 123


State 114

   25 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 25 (relation_exp)


State 115

   22 relation_exp: NOT exp comp exp .
   33 exp: exp . ADD multiplicative_exp
   34    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 22 (relation_exp)


State 116

   44 term: SUB L_PAREN exp R_PAREN .

    $default  reduce using rule 44 (term)


State 117

   47 multi_exp: exp COMMA . multi_exp

    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    exp                 go to state 100
    multiplicative_exp  go to state 50
    term                go to state 51
    multi_exp           go to state 124
    var                 go to state 52


State 118

   45 term: IDENT L_PAREN multi_exp R_PAREN .

    $default  reduce using rule 45 (term)


State 119

   57 var: IDENT L_SQUARE_BRACKET exp R_SQUARE_BRACKET .

    $default  reduce using rule 57 (var)


State 120

   53 multi_statement_else: ELSE . multi_statement

    IF        shift, and go to state 28
    WHILE     shift, and go to state 29
    DO        shift, and go to state 30
    CONTINUE  shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    RETURN    shift, and go to state 34
    IDENT     shift, and go to state 9

    statement        go to state 35
    multi_statement  go to state 125
    identifiers      go to state 37


State 121

    7 statement: IF bool_exp THEN multi_statement multi_statement_else . ENDIF

    ENDIF  shift, and go to state 126


State 122

    8 statement: WHILE bool_exp BEGINLOOP multi_statement ENDLOOP .

    $default  reduce using rule 8 (statement)


State 123

    9 statement: DO BEGINLOOP multi_statement ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 39
    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45

    bool_exp            go to state 127
    relation_and_exp    go to state 47
    relation_exp        go to state 48
    exp                 go to state 49
    multiplicative_exp  go to state 50
    term                go to state 51
    var                 go to state 52


State 124

   47 multi_exp: exp COMMA multi_exp .

    $default  reduce using rule 47 (multi_exp)


State 125

   53 multi_statement_else: ELSE multi_statement .

    $default  reduce using rule 53 (multi_statement_else)


State 126

    7 statement: IF bool_exp THEN multi_statement multi_statement_else ENDIF .

    $default  reduce using rule 7 (statement)


State 127

    9 statement: DO BEGINLOOP multi_statement ENDLOOP WHILE bool_exp .
   15 bool_exp: bool_exp . OR relation_and_exp

    OR  shift, and go to state 76

    $default  reduce using rule 9 (statement)
