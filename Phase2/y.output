Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | function prog_start

    3 $@1: %empty

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    5 declaration: identifiers COLON INTEGER
    6            | identifiers error INTEGER
    7            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers error ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    9 statement: var ASSIGN exp
   10          | var error exp
   11          | IF bool_exp THEN multi_statement multi_statement_else ENDIF
   12          | WHILE bool_exp BEGINLOOP multi_statement ENDLOOP
   13          | DO BEGINLOOP multi_statement ENDLOOP WHILE bool_exp
   14          | READ multi_var
   15          | WRITE multi_var
   16          | CONTINUE
   17          | RETURN exp

   18 bool_exp: relation_and_exp
   19         | bool_exp OR relation_and_exp

   20 relation_and_exp: relation_exp
   21                 | relation_and_exp AND relation_exp

   22 relation_exp: exp comp exp
   23             | TRUE
   24             | FALSE
   25             | L_PAREN bool_exp R_PAREN
   26             | NOT exp comp exp
   27             | NOT TRUE
   28             | NOT FALSE
   29             | NOT L_PAREN bool_exp R_PAREN

   30 comp: EQ
   31     | NEQ
   32     | LT
   33     | GT
   34     | LTE
   35     | GTE

   36 exp: multiplicative_exp
   37    | exp ADD multiplicative_exp
   38    | exp SUB multiplicative_exp

   39 multiplicative_exp: term
   40                   | multiplicative_exp MULT term
   41                   | multiplicative_exp DIV term
   42                   | multiplicative_exp MOD term

   43 term: var
   44     | NUMBER
   45     | L_PAREN exp R_PAREN
   46     | SUB var
   47     | SUB NUMBER
   48     | SUB L_PAREN exp R_PAREN
   49     | IDENT L_PAREN multi_exp R_PAREN

   50 multi_exp: exp
   51          | exp COMMA multi_exp

   52 multi_declaration: %empty
   53                  | declaration SEMICOLON multi_declaration

   54 multi_statement: statement SEMICOLON
   55                | statement SEMICOLON multi_statement

   56 multi_statement_else: %empty
   57                     | ELSE multi_statement

   58 multi_var: var
   59          | multi_var COMMA var

   60 identifiers: IDENT
   61            | identifiers COMMA IDENT

   62 var: IDENT
   63    | IDENT L_SQUARE_BRACKET exp R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 4 6 8 10
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 5 6 7 8
ARRAY (266) 7 8
OF (267) 7 8
IF (268) 11
THEN (269) 11
ENDIF (270) 11
ELSE (271) 57
WHILE (272) 12 13
DO (273) 13
BEGINLOOP (274) 12 13
ENDLOOP (275) 12 13
CONTINUE (276) 16
READ (277) 14
WRITE (278) 15
AND (279) 21
OR (280) 19
NOT (281) 26 27 28 29
TRUE (282) 23 27
FALSE (283) 24 28
RETURN (284) 17
SUB (285) 38 46 47 48
ADD (286) 37
MULT (287) 40
DIV (288) 41
MOD (289) 42
EQ (290) 30
NEQ (291) 31
LT (292) 32
GT (293) 33
LTE (294) 34
GTE (295) 35
SEMICOLON (296) 4 53 54 55
COLON (297) 5 7
COMMA (298) 51 59 61
L_PAREN (299) 25 29 45 48 49
R_PAREN (300) 25 29 45 48 49
L_SQUARE_BRACKET (301) 7 8 63
R_SQUARE_BRACKET (302) 7 8 63
ASSIGN (303) 9
IDENT (304) 4 49 60 61 62 63
NUMBER (305) 7 8 44 47


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
prog_start (52)
    on left: 1 2, on right: 0 2
function (53)
    on left: 4, on right: 2
$@1 (54)
    on left: 3, on right: 4
declaration (55)
    on left: 5 6 7 8, on right: 53
statement (56)
    on left: 9 10 11 12 13 14 15 16 17, on right: 54 55
bool_exp (57)
    on left: 18 19, on right: 11 12 13 19 25 29
relation_and_exp (58)
    on left: 20 21, on right: 18 19 21
relation_exp (59)
    on left: 22 23 24 25 26 27 28 29, on right: 20 21
comp (60)
    on left: 30 31 32 33 34 35, on right: 22 26
exp (61)
    on left: 36 37 38, on right: 9 10 17 22 26 37 38 45 48 50 51 63
multiplicative_exp (62)
    on left: 39 40 41 42, on right: 36 37 38 40 41 42
term (63)
    on left: 43 44 45 46 47 48 49, on right: 39 40 41 42
multi_exp (64)
    on left: 50 51, on right: 49 51
multi_declaration (65)
    on left: 52 53, on right: 4 53
multi_statement (66)
    on left: 54 55, on right: 4 11 12 13 55 57
multi_statement_else (67)
    on left: 56 57, on right: 11
multi_var (68)
    on left: 58 59, on right: 14 15 59
identifiers (69)
    on left: 60 61, on right: 5 6 7 8 61
var (70)
    on left: 62 63, on right: 9 10 43 46 58 59


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    function    go to state 3


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    IDENT  shift, and go to state 4


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 5


State 3

    2 prog_start: function . prog_start

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 6
    function    go to state 3


State 4

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: prog_start $end .

    $default  accept


State 6

    2 prog_start: function prog_start .

    $default  reduce using rule 2 (prog_start)


State 7

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 52 (multi_declaration)

    declaration        go to state 10
    multi_declaration  go to state 11
    identifiers        go to state 12


State 9

   60 identifiers: IDENT .

    $default  reduce using rule 60 (identifiers)


State 10

   53 multi_declaration: declaration . SEMICOLON multi_declaration

    SEMICOLON  shift, and go to state 13


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration . END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    END_PARAMS  shift, and go to state 14


State 12

    5 declaration: identifiers . COLON INTEGER
    6            | identifiers . error INTEGER
    7            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | identifiers . error ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   61 identifiers: identifiers . COMMA IDENT

    error  shift, and go to state 15
    COLON  shift, and go to state 16
    COMMA  shift, and go to state 17


State 13

   53 multi_declaration: declaration SEMICOLON . multi_declaration

    IDENT  shift, and go to state 9

    $default  reduce using rule 52 (multi_declaration)

    declaration        go to state 10
    multi_declaration  go to state 18
    identifiers        go to state 12


State 14

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS . BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 15

    6 declaration: identifiers error . INTEGER
    8            | identifiers error . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21


State 16

    5 declaration: identifiers COLON . INTEGER
    7            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


State 17

   61 identifiers: identifiers COMMA . IDENT

    IDENT  shift, and go to state 24


State 18

   53 multi_declaration: declaration SEMICOLON multi_declaration .

    $default  reduce using rule 53 (multi_declaration)


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS . multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 52 (multi_declaration)

    declaration        go to state 10
    multi_declaration  go to state 25
    identifiers        go to state 12


State 20

    6 declaration: identifiers error INTEGER .

    $default  reduce using rule 6 (declaration)


State 21

    8 declaration: identifiers error ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 22

    5 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 5 (declaration)


State 23

    7 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 24

   61 identifiers: identifiers COMMA IDENT .

    $default  reduce using rule 61 (identifiers)


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration . END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    END_LOCALS  shift, and go to state 28


State 26

    8 declaration: identifiers error ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 27

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS . BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    BEGIN_BODY  shift, and go to state 31


State 29

    8 declaration: identifiers error ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 30

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


State 31

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY . multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statement        go to state 42
    multi_statement  go to state 43
    var              go to state 44


State 32

    8 declaration: identifiers error ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 45


State 33

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 46


State 34

   11 statement: IF . bool_exp THEN multi_statement multi_statement_else ENDIF

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    bool_exp            go to state 54
    relation_and_exp    go to state 55
    relation_exp        go to state 56
    exp                 go to state 57
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 35

   12 statement: WHILE . bool_exp BEGINLOOP multi_statement ENDLOOP

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    bool_exp            go to state 61
    relation_and_exp    go to state 55
    relation_exp        go to state 56
    exp                 go to state 57
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 36

   13 statement: DO . BEGINLOOP multi_statement ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 62


State 37

   16 statement: CONTINUE .

    $default  reduce using rule 16 (statement)


State 38

   14 statement: READ . multi_var

    IDENT  shift, and go to state 41

    multi_var  go to state 63
    var        go to state 64


State 39

   15 statement: WRITE . multi_var

    IDENT  shift, and go to state 41

    multi_var  go to state 65
    var        go to state 64


State 40

   17 statement: RETURN . exp

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    exp                 go to state 67
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 41

   62 var: IDENT .
   63    | IDENT . L_SQUARE_BRACKET exp R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 62 (var)


State 42

   54 multi_statement: statement . SEMICOLON
   55                | statement . SEMICOLON multi_statement

    SEMICOLON  shift, and go to state 69


State 43

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement . END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    END_BODY  shift, and go to state 70


State 44

    9 statement: var . ASSIGN exp
   10          | var . error exp

    error   shift, and go to state 71
    ASSIGN  shift, and go to state 72


State 45

    8 declaration: identifiers error ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 73


State 46

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 74


State 47

   26 relation_exp: NOT . exp comp exp
   27             | NOT . TRUE
   28             | NOT . FALSE
   29             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 75
    FALSE    shift, and go to state 76
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    exp                 go to state 78
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 48

   23 relation_exp: TRUE .

    $default  reduce using rule 23 (relation_exp)


State 49

   24 relation_exp: FALSE .

    $default  reduce using rule 24 (relation_exp)


State 50

   46 term: SUB . var
   47     | SUB . NUMBER
   48     | SUB . L_PAREN exp R_PAREN

    L_PAREN  shift, and go to state 79
    IDENT    shift, and go to state 41
    NUMBER   shift, and go to state 80

    var  go to state 81


State 51

   25 relation_exp: L_PAREN . bool_exp R_PAREN
   45 term: L_PAREN . exp R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    bool_exp            go to state 82
    relation_and_exp    go to state 55
    relation_exp        go to state 56
    exp                 go to state 83
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 52

   49 term: IDENT . L_PAREN multi_exp R_PAREN
   62 var: IDENT .
   63    | IDENT . L_SQUARE_BRACKET exp R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 84
    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 62 (var)


State 53

   44 term: NUMBER .

    $default  reduce using rule 44 (term)


State 54

   11 statement: IF bool_exp . THEN multi_statement multi_statement_else ENDIF
   19 bool_exp: bool_exp . OR relation_and_exp

    THEN  shift, and go to state 85
    OR    shift, and go to state 86


State 55

   18 bool_exp: relation_and_exp .
   21 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 87

    $default  reduce using rule 18 (bool_exp)


State 56

   20 relation_and_exp: relation_exp .

    $default  reduce using rule 20 (relation_and_exp)


State 57

   22 relation_exp: exp . comp exp
   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89
    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    LTE  shift, and go to state 94
    GTE  shift, and go to state 95

    comp  go to state 96


State 58

   36 exp: multiplicative_exp .
   40 multiplicative_exp: multiplicative_exp . MULT term
   41                   | multiplicative_exp . DIV term
   42                   | multiplicative_exp . MOD term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 36 (exp)


State 59

   39 multiplicative_exp: term .

    $default  reduce using rule 39 (multiplicative_exp)


State 60

   43 term: var .

    $default  reduce using rule 43 (term)


State 61

   12 statement: WHILE bool_exp . BEGINLOOP multi_statement ENDLOOP
   19 bool_exp: bool_exp . OR relation_and_exp

    BEGINLOOP  shift, and go to state 100
    OR         shift, and go to state 86


State 62

   13 statement: DO BEGINLOOP . multi_statement ENDLOOP WHILE bool_exp

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statement        go to state 42
    multi_statement  go to state 101
    var              go to state 44


State 63

   14 statement: READ multi_var .
   59 multi_var: multi_var . COMMA var

    COMMA  shift, and go to state 102

    $default  reduce using rule 14 (statement)


State 64

   58 multi_var: var .

    $default  reduce using rule 58 (multi_var)


State 65

   15 statement: WRITE multi_var .
   59 multi_var: multi_var . COMMA var

    COMMA  shift, and go to state 102

    $default  reduce using rule 15 (statement)


State 66

   45 term: L_PAREN . exp R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    exp                 go to state 103
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 67

   17 statement: RETURN exp .
   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    $default  reduce using rule 17 (statement)


State 68

   63 var: IDENT L_SQUARE_BRACKET . exp R_SQUARE_BRACKET

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    exp                 go to state 104
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 69

   54 multi_statement: statement SEMICOLON .
   55                | statement SEMICOLON . multi_statement

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    $default  reduce using rule 54 (multi_statement)

    statement        go to state 42
    multi_statement  go to state 105
    var              go to state 44


State 70

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY . $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    $default  reduce using rule 3 ($@1)

    $@1  go to state 106


State 71

   10 statement: var error . exp

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    exp                 go to state 107
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 72

    9 statement: var ASSIGN . exp

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    exp                 go to state 108
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 73

    8 declaration: identifiers error ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 74

    7 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


State 75

   27 relation_exp: NOT TRUE .

    $default  reduce using rule 27 (relation_exp)


State 76

   28 relation_exp: NOT FALSE .

    $default  reduce using rule 28 (relation_exp)


State 77

   29 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   45 term: L_PAREN . exp R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    bool_exp            go to state 109
    relation_and_exp    go to state 55
    relation_exp        go to state 56
    exp                 go to state 83
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 78

   26 relation_exp: NOT exp . comp exp
   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89
    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    LTE  shift, and go to state 94
    GTE  shift, and go to state 95

    comp  go to state 110


State 79

   48 term: SUB L_PAREN . exp R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    exp                 go to state 111
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 80

   47 term: SUB NUMBER .

    $default  reduce using rule 47 (term)


State 81

   46 term: SUB var .

    $default  reduce using rule 46 (term)


State 82

   19 bool_exp: bool_exp . OR relation_and_exp
   25 relation_exp: L_PAREN bool_exp . R_PAREN

    OR       shift, and go to state 86
    R_PAREN  shift, and go to state 112


State 83

   22 relation_exp: exp . comp exp
   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp
   45 term: L_PAREN exp . R_PAREN

    SUB      shift, and go to state 88
    ADD      shift, and go to state 89
    EQ       shift, and go to state 90
    NEQ      shift, and go to state 91
    LT       shift, and go to state 92
    GT       shift, and go to state 93
    LTE      shift, and go to state 94
    GTE      shift, and go to state 95
    R_PAREN  shift, and go to state 113

    comp  go to state 96


State 84

   49 term: IDENT L_PAREN . multi_exp R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    exp                 go to state 114
    multiplicative_exp  go to state 58
    term                go to state 59
    multi_exp           go to state 115
    var                 go to state 60


State 85

   11 statement: IF bool_exp THEN . multi_statement multi_statement_else ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statement        go to state 42
    multi_statement  go to state 116
    var              go to state 44


State 86

   19 bool_exp: bool_exp OR . relation_and_exp

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    relation_and_exp    go to state 117
    relation_exp        go to state 56
    exp                 go to state 57
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 87

   21 relation_and_exp: relation_and_exp AND . relation_exp

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    relation_exp        go to state 118
    exp                 go to state 57
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 88

   38 exp: exp SUB . multiplicative_exp

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    multiplicative_exp  go to state 119
    term                go to state 59
    var                 go to state 60


State 89

   37 exp: exp ADD . multiplicative_exp

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    multiplicative_exp  go to state 120
    term                go to state 59
    var                 go to state 60


State 90

   30 comp: EQ .

    $default  reduce using rule 30 (comp)


State 91

   31 comp: NEQ .

    $default  reduce using rule 31 (comp)


State 92

   32 comp: LT .

    $default  reduce using rule 32 (comp)


State 93

   33 comp: GT .

    $default  reduce using rule 33 (comp)


State 94

   34 comp: LTE .

    $default  reduce using rule 34 (comp)


State 95

   35 comp: GTE .

    $default  reduce using rule 35 (comp)


State 96

   22 relation_exp: exp comp . exp

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    exp                 go to state 121
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 97

   40 multiplicative_exp: multiplicative_exp MULT . term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    term  go to state 122
    var   go to state 60


State 98

   41 multiplicative_exp: multiplicative_exp DIV . term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    term  go to state 123
    var   go to state 60


State 99

   42 multiplicative_exp: multiplicative_exp MOD . term

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    term  go to state 124
    var   go to state 60


State 100

   12 statement: WHILE bool_exp BEGINLOOP . multi_statement ENDLOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statement        go to state 42
    multi_statement  go to state 125
    var              go to state 44


State 101

   13 statement: DO BEGINLOOP multi_statement . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 126


State 102

   59 multi_var: multi_var COMMA . var

    IDENT  shift, and go to state 41

    var  go to state 127


State 103

   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp
   45 term: L_PAREN exp . R_PAREN

    SUB      shift, and go to state 88
    ADD      shift, and go to state 89
    R_PAREN  shift, and go to state 113


State 104

   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp
   63 var: IDENT L_SQUARE_BRACKET exp . R_SQUARE_BRACKET

    SUB               shift, and go to state 88
    ADD               shift, and go to state 89
    R_SQUARE_BRACKET  shift, and go to state 128


State 105

   55 multi_statement: statement SEMICOLON multi_statement .

    $default  reduce using rule 55 (multi_statement)


State 106

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 . FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    FUNCTION  shift, and go to state 129


State 107

   10 statement: var error exp .
   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    $default  reduce using rule 10 (statement)


State 108

    9 statement: var ASSIGN exp .
   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    $default  reduce using rule 9 (statement)


State 109

   19 bool_exp: bool_exp . OR relation_and_exp
   29 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    OR       shift, and go to state 86
    R_PAREN  shift, and go to state 130


State 110

   26 relation_exp: NOT exp comp . exp

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    exp                 go to state 131
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 111

   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp
   48 term: SUB L_PAREN exp . R_PAREN

    SUB      shift, and go to state 88
    ADD      shift, and go to state 89
    R_PAREN  shift, and go to state 132


State 112

   25 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 25 (relation_exp)


State 113

   45 term: L_PAREN exp R_PAREN .

    $default  reduce using rule 45 (term)


State 114

   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp
   50 multi_exp: exp .
   51          | exp . COMMA multi_exp

    SUB    shift, and go to state 88
    ADD    shift, and go to state 89
    COMMA  shift, and go to state 133

    $default  reduce using rule 50 (multi_exp)


State 115

   49 term: IDENT L_PAREN multi_exp . R_PAREN

    R_PAREN  shift, and go to state 134


State 116

   11 statement: IF bool_exp THEN multi_statement . multi_statement_else ENDIF

    ELSE  shift, and go to state 135

    $default  reduce using rule 56 (multi_statement_else)

    multi_statement_else  go to state 136


State 117

   19 bool_exp: bool_exp OR relation_and_exp .
   21 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 87

    $default  reduce using rule 19 (bool_exp)


State 118

   21 relation_and_exp: relation_and_exp AND relation_exp .

    $default  reduce using rule 21 (relation_and_exp)


State 119

   38 exp: exp SUB multiplicative_exp .
   40 multiplicative_exp: multiplicative_exp . MULT term
   41                   | multiplicative_exp . DIV term
   42                   | multiplicative_exp . MOD term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 38 (exp)


State 120

   37 exp: exp ADD multiplicative_exp .
   40 multiplicative_exp: multiplicative_exp . MULT term
   41                   | multiplicative_exp . DIV term
   42                   | multiplicative_exp . MOD term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 37 (exp)


State 121

   22 relation_exp: exp comp exp .
   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    $default  reduce using rule 22 (relation_exp)


State 122

   40 multiplicative_exp: multiplicative_exp MULT term .

    $default  reduce using rule 40 (multiplicative_exp)


State 123

   41 multiplicative_exp: multiplicative_exp DIV term .

    $default  reduce using rule 41 (multiplicative_exp)


State 124

   42 multiplicative_exp: multiplicative_exp MOD term .

    $default  reduce using rule 42 (multiplicative_exp)


State 125

   12 statement: WHILE bool_exp BEGINLOOP multi_statement . ENDLOOP

    ENDLOOP  shift, and go to state 137


State 126

   13 statement: DO BEGINLOOP multi_statement ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 138


State 127

   59 multi_var: multi_var COMMA var .

    $default  reduce using rule 59 (multi_var)


State 128

   63 var: IDENT L_SQUARE_BRACKET exp R_SQUARE_BRACKET .

    $default  reduce using rule 63 (var)


State 129

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION . IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    IDENT  shift, and go to state 139


State 130

   29 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 29 (relation_exp)


State 131

   26 relation_exp: NOT exp comp exp .
   37 exp: exp . ADD multiplicative_exp
   38    | exp . SUB multiplicative_exp

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    $default  reduce using rule 26 (relation_exp)


State 132

   48 term: SUB L_PAREN exp R_PAREN .

    $default  reduce using rule 48 (term)


State 133

   51 multi_exp: exp COMMA . multi_exp

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 66
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    exp                 go to state 114
    multiplicative_exp  go to state 58
    term                go to state 59
    multi_exp           go to state 140
    var                 go to state 60


State 134

   49 term: IDENT L_PAREN multi_exp R_PAREN .

    $default  reduce using rule 49 (term)


State 135

   57 multi_statement_else: ELSE . multi_statement

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statement        go to state 42
    multi_statement  go to state 141
    var              go to state 44


State 136

   11 statement: IF bool_exp THEN multi_statement multi_statement_else . ENDIF

    ENDIF  shift, and go to state 142


State 137

   12 statement: WHILE bool_exp BEGINLOOP multi_statement ENDLOOP .

    $default  reduce using rule 12 (statement)


State 138

   13 statement: DO BEGINLOOP multi_statement ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53

    bool_exp            go to state 143
    relation_and_exp    go to state 55
    relation_exp        go to state 56
    exp                 go to state 57
    multiplicative_exp  go to state 58
    term                go to state 59
    var                 go to state 60


State 139

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT . error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    error  shift, and go to state 144


State 140

   51 multi_exp: exp COMMA multi_exp .

    $default  reduce using rule 51 (multi_exp)


State 141

   57 multi_statement_else: ELSE multi_statement .

    $default  reduce using rule 57 (multi_statement_else)


State 142

   11 statement: IF bool_exp THEN multi_statement multi_statement_else ENDIF .

    $default  reduce using rule 11 (statement)


State 143

   13 statement: DO BEGINLOOP multi_statement ENDLOOP WHILE bool_exp .
   19 bool_exp: bool_exp . OR relation_and_exp

    OR  shift, and go to state 86

    $default  reduce using rule 13 (statement)


State 144

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error . BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    BEGIN_PARAMS  shift, and go to state 145


State 145

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS . multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 52 (multi_declaration)

    declaration        go to state 10
    multi_declaration  go to state 146
    identifiers        go to state 12


State 146

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration . END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    END_PARAMS  shift, and go to state 147


State 147

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS . BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    BEGIN_LOCALS  shift, and go to state 148


State 148

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS . multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 52 (multi_declaration)

    declaration        go to state 10
    multi_declaration  go to state 149
    identifiers        go to state 12


State 149

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration . END_LOCALS BEGIN_BODY multi_statement END_BODY

    END_LOCALS  shift, and go to state 150


State 150

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS . BEGIN_BODY multi_statement END_BODY

    BEGIN_BODY  shift, and go to state 151


State 151

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY . multi_statement END_BODY

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statement        go to state 42
    multi_statement  go to state 152
    var              go to state 44


State 152

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement . END_BODY

    END_BODY  shift, and go to state 153


State 153

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY $@1 FUNCTION IDENT error BEGIN_PARAMS multi_declaration END_PARAMS BEGIN_LOCALS multi_declaration END_LOCALS BEGIN_BODY multi_statement END_BODY .

    $default  reduce using rule 4 (function)
